active_environment: "local"

settings:
  default_timeout: 1000
  page_load_timeout: 30000
  think_time: 10000

  screenshot_on_failure: true
  video_recording: false
  concurrency: 1
  headless: true

  report_format: "html"
  gherkin_location: "e2e/features"

environments:
  local:
    frontend_base_url: "http://0.0.0.0:3000"
    api_base_url: "https://jsonplaceholder.typicode.com"

  local_windows:
    frontend_base_url: "http://localhost:3000"
    api_base_url: "https://jsonplaceholder.typicode.com"

  ci:
    frontend_base_url: "http://server:3000"
    api_base_url: "https://jsonplaceholder.typicode.com"

frontend:
  elements:
    common:
      visual_test_button:
        - "button"
      text_field:
        - "xpath://*[@id='text']"
      textarea_field:
        - "#textarea"
      double_click_button:
        - "#dbclick-btn"
      test_radio_button:
        - "#radio1"
      second_test_radio_button:
        - "#radio2"
      nonexistent_button:
        - "#inexistent"
      hidden_button:
        - "#hidden-btn"
      product_name_element:
        - "#product-name"
      non-existent_button:
        - "#non-existent"
      product_description_element:
        - "#product-description"
      scroll_target_element:
        - "#target-element"

    form_e2e:
      page_title:
        - "#page-title"
      test_checkbox:
        - "#checkbox"
        - "#rtt"
        - "input[type='checkbox']"
      test_dropdown:
        - "#select"
      multiple_dropdown:
        - "#select-multiple"
  pages:
    form_e2e: "form"
    google: "https://www.google.com"
    visual_e2e: "visual"
    table_e2e: "/table"
    details_e2e: "/details"
    scroll_e2e: "/scroll"

backend:
  default_headers:
    Content-Type: "application/json"
    Accept: "application/json"
    User-Agent: "TestFlowKit/1.0"
    X-Requested-With: "TestFlowKit"

  endpoints:
    get_posts:
      method: "GET"
      path: "/posts"
      description: "Retrieve all posts"

    get_post_by_id:
      method: "GET"
      path: "/posts/{id}"
      description: "Retrieve a specific post by ID"

    create_post:
      method: "POST"
      path: "/posts"
      description: "Create a new post"

    delete_post:
      method: "DELETE"
      path: "/posts/{id}"
      description: "Delete a post"

    get_albums:
      method: "GET"
      path: "/albums"
      description: "Retrieve all albums"

    get_album_by_id:
      method: "GET"
      path: "/albums/{id}"
      description: "Retrieve a specific album by ID"

    # Photos endpoints
    get_photos:
      method: "GET"
      path: "/photos"
      description: "Retrieve all photos"

    get_photos_by_album:
      method: "GET"
      path: "/albums/{id}/photos"
      description: "Retrieve photos for a specific album"
