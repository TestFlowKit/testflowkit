name: Releases Building CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pull-requests: write
  issues: write
  checks: write

jobs:
  # validate_release_branch:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Validate branch name
  #       run: |
  #         branch_name="${{ github.ref_name }}"
  #         if [[ "$branch_name" == 'main' ]]; then
  #           echo "'$branch_name' is valid."
  #         else
  #           echo "Error: '$branch_name' is not valid."
  #         fi

  # quality_check:
  #   name: Code Quality
  #   runs-on: ubuntu-latest
  #   needs: validate_release_branch

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ vars.NODE_VERSION }}

  #     - name: Install Commitlint
  #       run: |
  #         yarn init --yes
  #         yarn add @commitlint/config-conventional commitlint@latest
  #     - name: Validate Commits with Commitlint
  #       run: |
  #         npx commitlint --from ${{ github.base_ref }} --to ${{ github.sha }} --verbose

  #     - name: Setup Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: ${{ vars.GO_VERSION }}

  #     - name: Install golangci-lint
  #       run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

  #     - name: Run golangci-lint
  #       run: golangci-lint run ./...

  #     - name: Run Unit Tests
  #       run: go test ./...

  # e2e_tests:
  #   needs: validate_release_branch
  #   uses: ./.github/workflows/e2e.yml

  release:
    name: Créer une Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set Up Go Environment
        uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: Install Dependencies (Optional)
        run: |
          go mod tidy
          go mod download
      - name: Build Go Binaries
        run: |
          make releases

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Installation des dépendances (si nécessaire pour le build)
        run: yarn

      - name: Installation de semantic-release et plugins
        run: |
          npm install -g semantic-release \
            @semantic-release/commit-analyzer \
            @semantic-release/release-notes-generator \
            @semantic-release/changelog \
            @semantic-release/github \
            @semantic-release/git \
            @semantic-release/exec # Pour exécuter des commandes, utile pour les assets

      - name: Exécution de semantic-release
        env:
          GITHUB_TOKEN: ${{ vars.GH_TOKEN_SEMANTIC_RELEASE }}

        run: npx semantic-release
  deploy_doc:
    needs:
      - release
    uses: "./.github/workflows/deploy-docs.yml"
